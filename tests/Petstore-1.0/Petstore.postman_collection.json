{
	"info": {
		"_postman_id": "adc11c21-60d3-40f5-bb6a-4b1a1eb97ae5",
		"name": "Swagger Petstore",
		"description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n\nContact Support:\n Email: apiteam@swagger.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "pet",
			"item": [
				{
					"name": "{pet Id}",
					"item": [
						{
							"name": "Find pet by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5daf36aa-447c-4bfc-8420-8a8ecd8dc14a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"id is '0'\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.eql(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{petstoreBaseUrl}}/pet/:petId",
									"host": [
										"{{petstoreBaseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId",
											"value": "0",
											"type": "string",
											"description": "(Required) ID of pet to return"
										}
									]
								},
								"description": "Returns a single pet"
							},
							"response": [
								{
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}"
								},
								{
									"name": "Pet not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Finds Pets by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06d02d8a-dfaf-438a-82d8-fe14893d83ca",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{petstoreBaseUrl}}/pet/findByStatus?status=available",
							"host": [
								"{{petstoreBaseUrl}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "available",
									"description": "(Required) Status values that need to be considered for filter"
								}
							]
						},
						"description": "Multiple status values can be provided with comma separated strings"
					},
					"response": [
						{
							"name": "Invalid status value",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "available"
										},
										{
											"key": "status",
											"value": "available"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "available"
										},
										{
											"key": "status",
											"value": "available"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]"
						}
					]
				},
				{
					"name": "Finds Pets by tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19c6d5c3-e7ef-4eba-8de9-85b64672aae6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{petstoreBaseUrl}}/pet/findByTags?tags=dog",
							"host": [
								"{{petstoreBaseUrl}}"
							],
							"path": [
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "dog",
									"description": "(Required) Tags to filter by"
								},
								{
									"key": "tags",
									"value": "<string>",
									"description": "(Required) Tags to filter by",
									"disabled": true
								}
							]
						},
						"description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pet/findByTags?tags=<string>&tags=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByTags"
									],
									"query": [
										{
											"key": "tags",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]"
						},
						{
							"name": "Invalid tag value",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pet/findByTags?tags=<string>&tags=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByTags"
									],
									"query": [
										{
											"key": "tags",
											"value": "<string>"
										},
										{
											"key": "tags",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "store",
			"item": [
				{
					"name": "Returns pet inventories by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0dc215c3-d162-4c44-9e66-8b7de655ce26",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{petstoreBaseUrl}}/store/inventory",
							"host": [
								"{{petstoreBaseUrl}}"
							],
							"path": [
								"store",
								"inventory"
							]
						},
						"description": "Returns a map of status codes to quantities"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/store/inventory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"inventory"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}